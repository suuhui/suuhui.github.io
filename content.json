{"pages":[{"title":"about me log","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"about me","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/02/08/about-me/"},{"title":"日常使用的git命令","text":"git使用三部曲123&gt; git add .&gt; git commit -m &quot;&quot;&gt; git push 回退未add的文件1&gt; git checkout -- /path/to/file-name 回退已add但未commit的文件12&gt; git reset HEAD /path/to/file-name&gt; git checkout -- /path/to/file-name 回退已commit未push的文件1234567# HEAD^表示上个版本，HEAD^^表示上上个版本以此类推；往前多个版本的话用“^”的形式很麻烦，因此简化为HEAD~50表示往上50个版本# 撤销commit但不撤销add&gt; git reset --soft HEAD~1# 撤销commit同时撤销add&gt; git reset --mixed HEAD~1# 直接回到上一个commit的状态，丢弃工作区的改动&gt; git reset --hard HEAD~1 回退后，使用git log将看不到刚刚的commit记录 回退某一次commit上面的方法会回退前几次的commit，如果想只回退某一commit的使用rebase 12# 次数commit-id为想回退版本的上一个版本，-i标识交互模式；这样就能根据交互模式中的提示命令修改此版本之前所有的commit&gt; git rebase -i commit-id 回退reset的回退123&gt; git reflog# 使用reflog找到的commit-id进行回退&gt; git reset --soft/mixed/hard commit-id 在当前分支合并其他分支的commit12345678# 合并某一commit&gt; git cherry-pick commit-id# 合并多个commit&gt; git cherry-pick &lt;commit-id-1&gt; &lt;commit-id-2&gt;# 合并连续的多个commit（包括b不包括a）&gt; git cherry-pick a..b# 合并连续的多个commit（包括a和b）&gt; git cherry-pick a^..b 将其他分支上的某一文件合并到当前分支该命令会将其他分支上的文件替换当前分支工作区。 1&gt; git checkout &lt;branch-name&gt; &lt;file-name&gt;","link":"/2021/02/26/git-commands-for-daily-use/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.sh update.sh Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/03/15/hello-world/"},{"title":"test","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start","link":"/2021/02/10/test/"}],"tags":[{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"nginx","slug":"nginx","link":"/tags/nginx/"},{"name":"golang","slug":"golang","link":"/tags/golang/"},{"name":"theme","slug":"theme","link":"/tags/theme/"}],"categories":[{"name":"program","slug":"program","link":"/categories/program/"}]}